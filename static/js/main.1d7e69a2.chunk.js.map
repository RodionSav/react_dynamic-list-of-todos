{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","items","selectedTodo","onTodoSelected","className","map","id","title","completed","userId","cn","type","onClick","TodoFilter","query","setQuery","selectedStatus","setSelectedStatus","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","close","useState","user","setUser","useEffect","href","email","name","App","todos","setTodos","loading","setLoading","errorMessage","setErrorMessage","setSelectedTodo","visibleTodos","useMemo","filteredTodos","trim","filter","toLowerCase","includes","catch","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d7e69a2.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  items: Todo[];\n  selectedTodo?: Todo | null;\n  onTodoSelected: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  items,\n  selectedTodo,\n  onTodoSelected,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({\n          id, title, completed, userId,\n        }) => {\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': selectedTodo?.id === id,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onTodoSelected({\n                    id, title, completed, userId,\n                  })}\n                >\n                  <span className=\"icon\">\n                    {selectedTodo?.id === id ? (\n                      <i className=\"fa fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  selectedStatus: string;\n  setSelectedStatus: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, setQuery, selectedStatus, setSelectedStatus,\n}) => {\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleResetQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleResetQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  close,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Try again later');\n  const [query, setQuery] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    if (query.trim()) {\n      filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    if (selectedStatus === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (selectedStatus === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    return filteredTodos;\n  }, [todos, query, selectedStatus]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        .catch(() => setErrorMessage(errorMessage))\n        .finally(() => setLoading(false));\n    }, 1000);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                selectedStatus={selectedStatus}\n                setSelectedStatus={setSelectedStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading\n              && (\n                <TodoList\n                  items={visibleTodos}\n                  onTodoSelected={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            close={() => setSelectedTodo(null)}\n          />\n        )}\n      {' '}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}