{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","items","className","map","id","title","completed","cn","type","TodoFilter","query","setQuery","selectedStatus","setSelectedStatus","value","onChange","event","target","placeholder","style","pointerEvents","onClick","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","todos","setTodos","loading","setLoading","visibleTodos","useMemo","trim","filter","todo","toLowerCase","includes","useEffect","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfe5d180.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  items: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({\n  items,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, title, completed }) => {\n          return (\n            <tr key={id} data-cy=\"todo\" className=\"has-background-info-light\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"fa\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  selectedStatus: string;\n  setSelectedStatus: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, setQuery, selectedStatus, setSelectedStatus,\n}) => {\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleResetQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleResetQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  // const [errorMessage, setErrorMessage] = useState('');\n  const [query, setQuery] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n\n  const visibleTodos = useMemo(() => {\n    if (query.trim()) {\n      return todos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    if (selectedStatus === 'active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (selectedStatus === 'completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }, [todos, query, selectedStatus]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        // .catch(() => setErrorMessage('Try again later'))\n        .finally(() => setLoading(false));\n    }, 1000);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} setQuery={setQuery} selectedStatus={selectedStatus} setSelectedStatus={setSelectedStatus} />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              <TodoList items={visibleTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* `      <TodoModal /> */}\n      `\n      {' '}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}